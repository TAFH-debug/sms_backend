// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  avatar_url      String   @default("https://cdn.prod.website-files.com/6257adef93867e50d84d30e2/665786b8a93285bff36e194e_discord-mark-white%202.webp")
  email           String   @unique
  username        String   @unique
  isVerified      Boolean  @default(false)
  hashed_password String
  name            String   @default("John")
  surname         String   @default("Doe")
  about           String   @default("No description")

  roleIDs         String[] @default([]) @db.ObjectId
  roles           Role[]   @relation(fields: [roleIDs], references: [id])

  clubIDs         String[] @default([]) @db.ObjectId
  clubs           Club[]   @relation(fields: [clubIDs], references: [id])

  comments        Comment[]
 
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  postIDs         String[] @default([]) @db.ObjectId
  posts           Post[]   @relation(name: "PostToUser")

  likedPostIDs    String[] @default([]) @db.ObjectId
  likedPosts      Post[]   @relation(name: "PostToLikedUsers", fields: [likedPostIDs], references: [id])
}

model Role {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String       @unique
  color       String       @default("#fff")
  userIDs     String[]     @db.ObjectId
  users       User[]       @relation(fields: [userIDs], references: [id])
  permissions String[]
}

model Club {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  userIDs         String[] @db.ObjectId
  users           User[]   @relation(fields: [userIDs], references: [id])
  name            String
  description     String
  form_url        String
  logo_url        String
}

model Announcement {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  content         String
  author          String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
